name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: ['1.13.x', '1.14.x', '1.15.x']
        rel: ['0.7.13']
        
    env:
      AZURE_CUSTOM_ENDPOINT: http://127.0.0.1:10000/devstoreaccount1
      AWS_S3_CUSTOM_ENDPOINT: http://127.0.0.1:9000
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      GCS_FAKE_SERVER: "https://localhost:4443"
    steps:
    - name: checkout
      uses: actions/checkout@v2
    
    - name: Setup Environment
      run: |
        export MAKEFLAGS=-j$(($(grep -c '^processor' /proc/cpuinfo) * 2 + 1))
        export GOPATH=$HOME/go
        export PATH=/usr/lib/ccache:$GOPATH/bin:$PATH
    - name: Install Dependancies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y linux-headers-`uname -r` tree uuid-dev libattr1-dev libblkid-dev jq gnupg2 xz-utils gzip
    
    - name: Download ZFS
      run: |
        mkdir -p $HOME/zfs
        cd $HOME/zfs
        "[[ -d spl-${{matrix.rel}}.tar.gz ]] || curl -L https://github.com/openzfs/zfs/releases/download/zfs-${{matrix.rel}}/spl-${{matrix.rel}}.tar.gz | tar xz || true"
        "[[ -d zfs-${{matrix.rel}}.tar.gz ]] || curl -L https://github.com/openzfs/zfs/releases/download/zfs-${{matrix.rel}}/zfs-${{matrix.rel}}.tar.gz | tar xz"
        
    - name: Install SPL
      run: |
        cd spl-${{matrix.rel}} && ./configure --prefix=/usr && make && sudo make install
        
    - name: Install ZFS
      run: |
        cd zfs-${{matrix.rel}} && ./configure --prefix=/usr && make && sudo make install
    
    - name: Finish setup
      run: |
        sudo modprobe zfs
        cd $GITHUB_WORKSPACE
        mkdir temp
        export TMPDIR=$PWD/temp
        export VDEV=$(mktemp)
        chmod +x ./travis-setup.sh && ./travis-setup.sh

    #- name: Set up Go
     # uses: actions/setup-go@v2
      #with:
       # go-version: $ {{ matrix.go }}
        
    - name: Install go testing tools
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $GOPATH/bin v1.24.0
        GO111MODULE=off go get github.com/mattn/goveralls
        GO111MODULE=off go get github.com/mitchellh/gox
        make get

    - name: Build
      run: |
        make build

    - name: Test
      run: |
        chmod +x ./integration_test.sh && ./integration_test.sh
        sudo -E TMPDIR=$TMPDIR $(which go) test -race -v -coverprofile=coverage.out -covermode=atomic -coverpkg=$(go list ./... | grep -v '/vendor/' | paste -sd, -) ./...
        make lint
        
    - name: Cleanup
      run: |
        sudo -E $GOPATH/bin/goveralls -coverprofile=coverage.out -service=travis-ci
        chmod +x ./travis-teardown.sh && ./travis-teardown.sh
